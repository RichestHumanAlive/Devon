extension_to_language = {
            '.py': 'python',
            '.js': 'javascript',
            '.jsx': 'javascript',
            '.ts': 'typescript',
            '.tsx': 'typescript',
            '.java': 'java',
            '.cpp': 'c++',
            '.c': 'c',
            '.cs': 'c#',
            '.rb': 'ruby',
            '.php': 'php',
            '.html': 'html',
            '.css': 'css',
            '.m': 'objective-c',
            '.mm': 'objective-c++',
            '.sh': 'shell',
            '.go': 'go',
            '.rs': 'rust',
            '.sql': 'sql',
            '.yaml': 'yaml',
            '.yml': 'yaml',
            '.xml': 'xml'
        }

supported_noncode_extensions = [".md", ".json", ".sh", ".cargo", ".toml", ".config", ".yaml", ".yml", ".properties", "Dockerfile", ".dockerignore"]

supported_extensions = ['.py', '.js', '.jsx', '.ts', '.tsx', '.java', '.cpp', '.cxx', '.cc', '.hpp', '.h', '.go']

json_config_files = [
    "package.json",
    "package-lock.json",
    "composer.json",
    "bower.json",
    "tsconfig.json",
    "tsconfig.app.json",
    "tsconfig.spec.json",
    "tsconfig.test.json",
    "tsconfig.e2e.json",
    "angular.json",
    ".eslintrc.json",
    ".prettierrc.json",
    "jest.config.json",
    ".babelrc.json",
    "babel.config.json",
    "webpack.config.json",
    ".stylelintrc.json",
    ".huskyrc.json",
    ".lintstagedrc.json",
    "app.json",
    "app.config.json",
    "manifest.json",
    "settings.json",
    "launch.json",
    "tasks.json",
    "extensions.json",
    "appsettings.json",
    "appsettings.Development.json",
    "appsettings.Production.json",
    "config.json",
    "cypress.json",
    ".postcssrc.json",
    ".yarnrc.json",
    ".swcrc",
    ".graphqlrc.json",
    ".sentryclirc",
    ".nycrc.json",
    ".releaserc.json",
    "renovate.json",
    ".renovaterc.json",
    "firebase.json",
    "vercel.json",
    "now.json",
    "capacitor.config.json",
    "electron-builder.json",
    "metadata.json",
    "api.json",
    "i18n.json",
    "translations.json",
    "theme.json",
    "database.json",
    "cache.json",
    "logging.json",
    "security.json",
    "features.json",
    "development.json",
    "production.json",
    "staging.json",
    "build.json",
    "test.json",
    "deploy.json",
    "monitor.json",
    "analytics.json",
    "backup.json",
    "cron.json",
    "plugins.json",
    "services.json",
    "di.json",
    "routes.json",
    "state.json",
    "ui.json",
    "assets.json",
    "performance.json",
    "integrations.json"
]

RELATIONS_TYPES_MAP = {
            "function_definition": "FUNCTION_DEFINITION",
            "class_definition": "CLASS_DEFINITION",
            "function_declaration" : "FUNCTION_DEFINITION",

            # js / ts
            "interface_declaration": "INTERFACE_DEFINITION",
            "lexical_declaration": "FUNCTION_DEFINITION",
            "method_definition": "METHOD_DEFINITION",
            "arrow_function": "FUNCTION_DEFINITION",
            "variable_declaration": "VARIABLE_DEFINITION",
            "object": "OBJECT_DEFINITION",
            "export_statement": "EXPORT_DEFINITION",
            

            #CPP
            "class_specifier" : "CLASS_DEFINITION",
            "template_declaration" : "TEMPLATE_DEFINITION",
            "concept_definition" : "CONCEPT_DEFINITION",
            "struct_specifier" : "STRUCT_DEFINITION",
            "function_definition": "FUNCTION_DEFINITION",
            "namespace_definition": "NAMESPACE_DEFINITION",
            "enum_specifier": "ENUM_DEFINITION",
            "union_specifier": "UNION_DEFINITION",

            #java
            "class_declaration" : "CLASS_DEFINITION",
            "enum_declaration" : "ENUM_DEFINITION",
            "interface_declaration" : "INTERFACE_DEFINITION",
            "constructor_declaration": "CONSTRUCTOR_DEFINITION",
            "method_declaration": "METHOD_DEFINITION",
            "annotation_type_declaration": "ANNOTATION_DEFINITION",
            "record_declaration": "ROCORD_DEFINITION",

            # Go
            "type_declaration": "TYPE_DEFINITION",
            "method_declaration": "METHOD_DEFINITION",
            "function_declaration": "FUNCTION_DEFINITION",
            "interface_type": "INTERFACE_DEFINITION",
            "struct_type": "STRUCT_DEFINITION",
        }